QUES:Hamiltonian Path 

A Hamiltonian path, is a path in an undirected or directed graph that visits each vertex exactly once. Given an undirected graph  the task is to check if a
Hamiltonian path is present in it or not.


->Example 1:
Input:
N = 4, M = 4
Edges[][]= { {1,2}, {2,3}, {3,4}, {2,4} }
Output:
1 
Explanation: 
There is a hamiltonian path: 
1 -> 2 -> 3 -> 4 

->Example 2:
Input:
N = 4, M = 3 
Edges[][] = { {1,2}, {2,3}, {2,4} } 
Output: 
0 
Explanation: 
It can be proved that there is no 
hamiltonian path in the given graph

CODE:

class Solution
{
    public:
    bool dfs(int node,int c,vector<int> adj[],int n,int m,vector<bool>& vis )
    {
        if(c==n)
        {
            return true; 
        }
        vis[node]=true;
        for(auto it : adj[node])
        {
            if(!vis[it])
            {
                if(dfs(it,c+1,adj,n,m,vis))
                {
                    return true;
                }
            }
        }
        vis[node]=false;
        return false;
    }
    bool check(int N,int M,vector<vector<int>> edge)
    {
        vector<int>adj[N+1];
        for(int i=0;i<edge.size();i++)
        {
            int u=edge[i][0];
            int v=edge[i][1];
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        vector<bool> vis(N+1,false);
        for(int i=1;i<=N;i++)
        {
            if(dfs(i,1,adj,N,M,vis))
            {
                return true;
            }
        }
        return false;
    }
};
 
