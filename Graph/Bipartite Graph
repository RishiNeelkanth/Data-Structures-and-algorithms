Ques:Bipartite Graph 

Given an adjacency list of a graph adj  of V no. of vertices having 0 based index. Check whether the graph is bipartite or not.
 

->Example 1:
Input: 
Output: 1
Explanation: The given graph can be colored 
in two colors so, it is a bipartite graph.

->Example 2:
Input:
Output: 0
Explanation: The given graph cannot be colored 
in two colors such that color of adjacent 
vertices differs. 

Code:
** Using BFS

class Solution {
public:
	bool check(int src,vector<int> &color,vector <int> adj[])
	{
	    queue <int> q;
	    q.push(src);
	    color[src]=src;
	    while(!q.empty())
	    {
	        int node=q.front();
	        q.pop();
	        for( auto it : adj[node])
	        {
	            if(color[it]==-1)
	            {
	                q.push(it);
	                color[it]=1-color[node];
	            }
	            else if(color[it]==color[node])
	            {
	                return false;
	            }
	        }
	    }
	    return true;
	}
	bool isBipartite(int V, vector<int>adj[]){
	    vector <int> color(V,-1);
	    for(int i=0;i<V;i++)
	    {
	        if(color[i]==-1)
	            {
	                if(!check(i,color,adj))
	                {
	                    return false;
	                }
	            } 
	    }
	    return true;
	}

};

** Using DFS
