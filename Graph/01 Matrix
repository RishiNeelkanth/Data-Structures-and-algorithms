QUES: 01 Matrix

Given an m x n binary matrix mat, return the distance of the nearest 0 for each cell.
The distance between two adjacent cells is 1.

->Example 1:
Input: mat = [[0,0,0],[0,1,0],[0,0,0]]
Output: [[0,0,0],[0,1,0],[0,0,0]]

->Example 2:
Input: mat = [[0,0,0],[0,1,0],[1,1,1]]
Output: [[0,0,0],[0,1,0],[1,2,1]]

CODE:

class Solution {
public:
    bool check(int i ,int j ,int n ,int m )
    {
        if(i<0 || j<0 || i>=n || j>=m) return false;
        return true;
    }
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n= mat.size();
        int m=mat[0].size();
        vector<vector<int>> ans(n,vector<int> (m,-1));
        queue<pair<int,int>> q;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(mat[i][j]==0)
                {
                    ans[i][j]=0;
                    q.push({i,j});   
                }
            }
        }
        while(!q.empty())
        {
            pair<int,int> p;
            p=q.front();
            int i=p.first;
            int j=p.second;
            q.pop();
            if(check(i+1,j,n,m)&& ans[i+1][j]==-1)
            {
                ans[i+1][j]=ans[i][j]+1;
                q.push({i+1,j});
            }
            if(check(i-1,j,n,m)&& ans[i-1][j]==-1)
            {
                ans[i-1][j]=ans[i][j]+1;
                q.push({i-1,j});
            }if(check(i,j+1,n,m)&& ans[i][j+1]==-1)
            {
                ans[i][j+1]=ans[i][j]+1;
                q.push({i,j+1});
            }if(check(i,j-1,n,m)&& ans[i][j-1]==-1)
            {
                ans[i][j-1]=ans[i][j]+1;
                q.push({i,j-1});
            }
        }
        return ans;
    }
};
