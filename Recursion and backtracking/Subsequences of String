Ques: Subsequences of String

You are given a string 'STR' containing lowercase English letters from a to z inclusive. Your task is to find all non-empty possible subsequences of 'STR'.

->Sample Input 1:
1 
abc
Sample Output 1:
a ab abc ac b bc c
Explanation Of Sample Input 1:
All possible subsequences of abc are :  
“a” , “b” , “c” , “ab” , “bc” , “ac”, “abc”

->Sample Input 2:
1
bbb
Sample Output 2:
b b b bb bb bb bbb

Code:
** Backtracking

void solve(string str,int index,string output,vector<string>& ans)
{
    //base case
        if(index>=str.size())
        {
            if(output.size()>0)
            {
                 ans.push_back(output);
            }
            return;
        }
        //exclusion
        solve(str,index+1,output,ans);
        
        //inclusion
        char element=str[index];
        output.push_back(element);
        solve(str,index+1,output,ans);
}
vector<string> subsequences(string str){
	
	vector<string> ans;
    int index=0;
    string output="";
    solve(str,index,output,ans);
    return ans;
}
