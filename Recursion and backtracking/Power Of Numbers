Ques: Power Of Numbers 

Given a number and its reverse. Find that number raised to the power of its own reverse.
Note: As answers can be very large, print the result modulo 109 + 7.

->Example 1:
Input:
N = 2
Output: 4
Explanation: The reverse of 2 is 2
and after raising power of 2 by 2 
we get 4 which gives remainder as 
4 by dividing 1000000007.

->Example 2:
Input:
N = 12
Output: 864354781
Explanation: The reverse of 12 is 21
and 1221 , when divided by 1000000007 
gives remainder as 864354781.

Code:
** recursive approach
class Solution{
    public:
    //You need to complete this fucntion
    
    long long power(int a,int b)
    {   long long ans=1;
       if(b==0)
       {
           return 1;
       }
       if(b==1)
       {
           return a;
       }
        ans=power(a,b/2);        // to find a^(b/2)
        if(b%2==0)
        {
        return ans*ans;         // the most optimised way to find power of a number is , if we have to find 2^9 = 2 *2^4 *2^4 so we use a * ans * ans ( for odd)
        }                       // 2^8 = 2^4 * 2^4 So we use ans * ans (for even)
        else
        {
        return a*ans*ans;
        }
    }
};
