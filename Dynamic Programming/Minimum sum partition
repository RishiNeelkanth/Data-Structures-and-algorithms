QUES : Minimum sum partition 
   
Given an integer array arr of size N, the task is to divide it into two sets S1 and S2 such that the absolute difference between their sums is minimum and find 
the minimum difference

->Example 1:
Input: N = 4, arr[] = {1, 6, 11, 5} 
Output: 1
Explanation: 
Subset1 = {1, 5, 6}, sum of Subset1 = 12 
Subset2 = {11}, sum of Subset2 = 11   

->Example 2:
Input: N = 2, arr[] = {1, 4}
Output: 3
Explanation: 
Subset1 = {1}, sum of Subset1 = 1
Subset2 = {4}, sum of Subset2 = 4

QUES :
Using tabulation 

class Solution{

  public:
  int solve(int arr[],int n,int sum)
  {
      vector<vector<int>> t(n+1,vector<int> (sum+1));
      for(int i=0;i<=n;i++)
      {
          for(int j=0;j<=sum;j++)
          {
              if(i==0)
              {
                  t[i][j]=0;
              }
              if(j==0)
              {
                  t[i][j]=1;
              }
          }
      }
      for(int i=1;i<=n;i++)
      {
          for(int j=0;j<=sum;j++)
          {
              if(arr[i-1]<=j)
              {
                  t[i][j]=(t[i-1][j-arr[i-1]] || t[i-1][j]);
              }
              else
              {
                  t[i][j]=t[i-1][j];              
                  
              }
          }
      }
      vector<int> v(sum+1);
      for(int i=0;i<=sum/2;i++)
      {
          if(t[n][i]==1)
          {
              v.push_back(i);
          }
          
      }
      int mini=INT_MAX;
      for(int i=0;i<v.size();i++)
      {
          mini=min(mini,sum-2*v[i]);
      }
      return mini;
  }
	int minDifference(int arr[], int n)  { 
	    int sum=0;
	    for(int i=0;i<n;i++)
	    {
	        sum=sum+arr[i];
	    }
	    return solve(arr,n,sum);
	} 
};
