QUES : Perfect Sum Problem 

Given an array arr[] of non-negative integers and an integer sum, the task is to count all subsets of the given array with a sum equal to a given sum.
Note: Answer can be very large, so, output answer modulo 109+7

->Example 1:
Input: N = 6, arr[] = {2, 3, 5, 6, 8, 10}
       sum = 10
Output: 3
Explanation: {2, 3, 5}, {2, 8}, {10}

->Example 2:
Input: N = 5, arr[] = {1, 2, 3, 4, 5}
       sum = 10
Output: 3
Explanation: {1, 2, 3, 4}, {1, 4, 5}, 
             {2, 3, 5}
             
             
CODE :
Using tabulation

class Solution{

	public:
	int mod = 1e9+7;
	int perfectSum(int arr[], int n, int sum)
	{
        vector<vector<int>> t(n+1,vector<int>(sum+1));
        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=sum;j++)
            {
                if(i==0)
                {
                    t[i][j]=0;
                }
                if(j==0)
                {
                    t[i][j]=1;
                }
            }
        }
        for(int i=1;i<=n;i++)
        {
            for(int j=0;j<=sum;j++)
            {
                if(arr[i-1]<=j)
                {
                    t[i][j]=(t[i-1][j-arr[i-1]]+t[i-1][j])%mod;
                }
                else
                {
                    t[i][j]=t[i-1][j]%mod;
                }
            }
        }
        return t[n][sum]%mod;
	}
	  
};
