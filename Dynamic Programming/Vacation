QUES : Vacation

Taro's summer vacation starts tomorrow, and he has decided to make plans for it now.

The vacation consists of N days. For each i (1≤i≤N), Taro will choose one of the following activities and do it on the i-th day:

A: Swim in the sea. Gain a ipoints of happiness.
B: Catch bugs in the mountains. Gain b ipoints of happiness.
C: Do homework at home. Gain c ipoints of happiness.
As Taro gets bored easily, he cannot do the same activities for two or more consecutive days.
Find the maximum possible total points of happiness that Taro gains.


->Sample Input 1 
3
10 40 70
20 50 80
30 60 90
Sample Output 1 
210
If Taro does activities in the order C, B, C, he will gain 70+50+90=210 points of happiness.


->Sample Input 2 
1
100 10 1
Sample Output 2 
100


->Sample Input 3 
7
6 7 8
8 8 3
2 5 2
7 8 6
4 6 8
2 3 4
7 5 1
Sample Output 3 
46
Taro should do activities in the order C, A, B, A, C, B, A.


CODE : 

***** USING MEMOIZATION

int solve(int n,vector<vector<int>> a)
{
    vector<vector<int>> dp(n,vector<int>(3));
    dp[0][0]=a[0][0];
    dp[0][1]=a[0][1];
    dp[0][2]=a[0][2];
    for(int i=1;i<n;i++)
    {
        dp[i][0]=dp[i][0]+max(dp[i-1][1],dp[i-1][2]);
        dp[i][1]=dp[i][0]+max(dp[i-1][0],dp[i-1][2]);
        dp[i][2]=dp[i][0]+max(dp[i-1][0],dp[i-1][1]);
    }
    return max(dp[n-1][0],dp[n-1][1],dp[n-1][2]);
}
