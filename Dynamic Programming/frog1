Ques : Frog1

There are N stones, numbered 1,2,…,N. For each i (1≤i≤N), the height of Stone i is hi
There is a frog who is initially on Stone 1. He will repeat the following action some number of times to reach Stone N:

Sample Input 1 
Copy
4
10 30 40 20
Sample Output 1 
Copy
30
If we follow the path 1 → 2 → 4, the total cost incurred would be ∣10−30∣+∣30−20∣=30.

Sample Input 2 
Copy
2
10 10
Sample Output 2 
Copy
0
If we follow the path 1 → 2, the total cost incurred would be ∣10−10∣=0.

Sample Input 3 
Copy
6
30 10 60 10 60 50
Sample Output 3 
Copy
40
If we follow the path 1 → 3 → 5 → 6, the total cost incurred would be ∣30−60∣+∣60−60∣+∣60−50∣=40.

CODE :
USING MEMOIZATION



CODE :

****  using Memoization

#include<bits/stdc++.h>
using namespace std;
vector<int>h;

int find(int i,vector<int> &dp)
{
    if(i==0)
    {
        return 0;
    }
    if(dp[i]!=-1)
    {
        return dp[i];
    }
    int cost=INT_MAX;
    cost=min(cost,find(i-1,dp)+abs(h[i]-h[i-1]));
    if(i>1)
    {
        cost=min(cost,find(i-2,dp)+abs(h[i]-h[i-2]));
    }
    return dp[i]=cost;
}
int main()
{
    
    int n;
    cin>>n;
    vector<int> dp(n,-1);
    int temp;
    for(int i=0;i<n;i++)
    {
        cin>>temp;
        h.push_back(temp);
    }
    cout<<find(n-1,dp);
    return 0;
}

