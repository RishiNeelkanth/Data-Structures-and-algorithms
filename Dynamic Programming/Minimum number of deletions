QUES : Minimum number of deletions. 

Given a string 'str' of size ‘n’. The task is to remove or delete the minimum number of characters from the string so that the resultant string is a palindrome. Find the minimum numbers of characters we need to remove.
Note: The order of characters should be maintained.

->Example 1:
Input: n = 7, str = "aebcbda"
Output: 2
Explanation: We'll remove 'e' and
'd' and the string become "abcba".

->Example 2:
Input: n = 3, str = "aba"
Output: 0
Explanation: We don't remove any
character.

CODE :

**** USING Tabulation

int minDeletions(string X, int n) { 
    string Y=X;
        reverse(Y.begin(),Y.end());
        int m=Y.size();
        vector<vector<int>> t(m+1,vector<int> (n+1));
        for(int i=0;i<n+1;i++)
        {
            for(int j=0;j<m+1;j++)
            {
                if(i==0 || j==0)
                {
                    t[i][j]=0;
                }
            }
        }
        for(int i=1;i<n+1;i++)
        {
            for(int j=1;j<m+1;j++)
            {
                if(X[i-1]==Y[j-1])
                {
                    t[i][j]=1+t[i-1][j-1];
                }
                else
                {
                    t[i][j]=max(t[i-1][j],t[i][j-1]);
                }
            }
        }
        return n-t[n][m];
} 
