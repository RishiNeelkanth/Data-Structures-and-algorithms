QUES : Tree from Postorder and Inorder 

Given inorder and postorder traversals of a Binary Tree in the arrays in[] and post[] respectively. The task is to construct the binary tree from these traversals.

->Example 1:
Input:
N = 8
in[] = 4 8 2 5 1 6 3 7
post[] =8 4 5 2 6 7 3 1
Output: 1 2 4 8 5 3 6 7
Explanation: For the given postorder and
inorder traversal of tree the  resultant
binary tree will be
           1
       /      \
     2         3
   /  \      /  \
  4    5    6    7
   \
     8
 

->Example 2:
Input:
N = 5
in[] = 9 5 2 3 4
post[] = 5 9 3 4 2
Output: 2 9 5 4 3
Explanation:  
the  resultant binary tree will be
           2
        /     \
       9       4
        \     /
         5   3


CODE :

int find(int in[],int n,int element)
{
    for(int i=0;i<n;i++)
    {
        if(in[i]==element)
        {
            return i;
        }
    }
    return -1;
}
Node *construct(int in[],int post[],int n,int &index,int ins,int ine)
{
    //base
    if(index<0 || ins>ine)
    {
        return NULL;
    }
    
    //induction
    int element=post[index--];
    Node *root=new Node(element);
    int position=find(in,n,element);
    
    //recursion
    root->right=construct(in,post,n,index,position+1,ine);
    root->left=construct(in,post,n,index,ins,position-1);
    
    return root;
}
Node *buildTree(int in[], int post[], int n) {
    int postindex=n-1;
    Node *ans=construct(in,post,n,postindex,0,n-1);
    return ans;
}
