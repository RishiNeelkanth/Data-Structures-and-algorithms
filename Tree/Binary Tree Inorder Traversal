Ques: Binary Tree Inorder Traversal

Given the root of a binary tree, return the inorder traversal of its nodes' values.

->Example 1:
Input: root = [1,null,2,3]
Output: [1,3,2]

->Example 2:
Input: root = []
Output: []

->Example 3:
Input: root = [1]
Output: [1]

Code:
** recursion  T.C-O(n)

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> nodes;
        inorder(root,nodes);
        return nodes;
    }
    void inorder(TreeNode* root,vector<int>& nodes)
    {
        if(!root)
        {
            return;
        }
        inorder(root->left,nodes);
        nodes.push_back(root->val);
        inorder(root->right,nodes);
    }
};
