QUES : Concat Sort

JJ has an array AA. He can perform the following operation on AA:
Divide AA into two subsequences PP and QQ such that each A_iA 
imbelongs to either PP or QQ.
Set A := P\ \texttt{concat}\ QA:=P concat Q
Here \texttt{concat}concat denotes the concatenation operation. For e.g. [2, 1, 5] \texttt{ concat } [4, 3] = [2, 1, 5, 4, 3][2,1,5] concat [4,3]=[2,1,5,4,3].
Is it possible to make AA sorted in non-decreasing order after applying the above operation at most once?
Note: An array XX is a subsequence of an array YY if XX can be obtained by deletion of several (possibly, zero or all) elements from YY.


Input
3
6
4 5 6 1 2 3
5
1 3 5 2 4
5
5 10 7 11 9
Output
YES
NO
YES

CODE :

#include <bits/stdc++.h>
using namespace std;

int main() {
	long long t;
	cin>>t;
	while(t--)
	{
	    long long N;
	    cin>>N;
	    long long A[N];
	    long long B[N];
	    for(int i=0;i<N;i++)
	    {
	        
	        cin>>A[i];
	        B[i]=A[i];
	        
	    }
	    sort(B,B+N);
	   
	    
	    long long maxi=0;
	    for(long long i=0;i<N;i++)
	    {
	        if(A[i]==B[maxi])
	        {
	            maxi++;
	        }
	    }
	    for(int i=0;i<N;i++)
	    {
	        if(A[i]==B[maxi])
	        {
	            maxi++;
	        }
	    }
	    if(maxi>=N)
	    {
	        cout<<"YES"<<endl;
	    }
	    else
	    {
	        cout<<"NO"<<endl;
	    }
	}
	return 0;
}
