QUES : Maximum path sum from any node 

Given a binary tree, the task is to find the maximum path sum. The path may start and end at any node in the tree.

->Example 1:
Input:
     10
    /  \
   2   -25
  / \  /  \
 20 1  3  4
Output: 32
Explanation: Path in the given tree goes
like 10 , 2 , 20 which gives the max
sum as 32.

->Example 2:
Input:
     10
   /    \
  2      5
          \
          -2
Output: 17
Explanation: Path in the given tree goes
like 2 , 10 , 5 which gives the max sum
as 17.

CODE:
**recursion

class Solution {
  public:
    //Function to return maximum path sum from any node in a tree.
    int findMaxSum(Node* root)
    {
        int maxi=INT_MIN;
        maxp(root,maxi);
        return maxi;
    }
    int maxp(Node* root,int &maxi)
    {
        if(!root){return 0;}
        
        int left=max(0,maxp(root->left,maxi));
        int right=max(0,maxp(root->right,maxi));
        maxi=max(maxi,left+right+root->data);
        return root->data+max(left,right);
    }
};
