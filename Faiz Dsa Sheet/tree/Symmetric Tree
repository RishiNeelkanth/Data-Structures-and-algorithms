QUES : Symmetric Tree

Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).

->Example 1:
Input: root = [1,2,2,3,4,4,3]
Output: true

->Example 2:
Input: root = [1,2,2,null,3,null,3]
Output: false


CODE :

class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        return root==NULL || check(root->left,root->right);
    }
    bool check(TreeNode* root1,TreeNode* root2)
    {
        if(!root1 || !root2)
        {
            return root1==root2;
        }
        if(root1->val!= root2->val)
        {
            return false;
        }
        return check(root1->left,root2->right)
            &&
            check(root1->right,root2->left);
    }
};
