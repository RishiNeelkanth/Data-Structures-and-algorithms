QUES : ZigZag Tree Traversal 

Given a Binary Tree. Find the Zig-Zag Level Order Traversal of the Binary Tree.

->Example 1:
Input:
        3
      /   \
     2     1
Output:
3 1 2

->Example 2:
Input:
           7
        /     \
       9       7
     /  \     /   
    8    8   6     
   /  \
  10   9 
Output:
7 7 9 8 8 6 9 10 


CODE:

class Solution{
    public:
    //Function to store the zig zag order traversal of tree in a list.
    vector <int> zigZagTraversal(Node* root)
    {
    	vector <int> ans;
    	queue<Node*> q;
    	q.push(root);
    	bool flag=true;
    	while(!q.empty())
    	{
    	    int size=q.size();
    	    vector<int> level(size);
    	    for(int i=0;i<size;i++)
    	    {
    	        Node* node=q.front();
    	        q.pop();
    	        if(flag)
    	        {
    	            level[i]=node->data;
    	        }
    	        else
    	        {
    	            level[size-1-i]=node->data;
    	        }
    	        if(node->left!=NULL){q.push(node->left);}
    	        if(node->right!=NULL){q.push(node->right);}
    	    }
    	    flag=!flag;
    	    for(auto it : level)
    	    ans.push_back(it);
    	}
    	return ans;
    }
};
