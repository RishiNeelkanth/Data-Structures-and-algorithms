Ques: Palindrome Linked List

Given the head of a singly linked list, return true if it is a palindrome.

->Example 1:
Input: head = [1,2,2,1]
Output: true

->Example 2:
Input: head = [1,2]
Output: false

Code:
** /**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* temp;
    bool possible(ListNode* head){
        if(head==NULL) return true;
         bool check = possible(head->next)&(temp->val==head->val);
        temp = temp->next;
        return check;
    }
    bool isPalindrome(ListNode* head) {
        temp = head;
        return possible(head);
    }
};
